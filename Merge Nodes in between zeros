
class ListNode {
    int val;
    ListNode next;
    ListNode() {}
    ListNode(int val) { this.val = val; }
    ListNode(int val, ListNode next) { this.val = val; this.next = next; }

    
    public static ListNode deserialize(String data) {
        if (data == null || data.isEmpty()) {
            return null;
        }
      
        data = data.replaceAll("\\[|\\]", "").trim();
        if (data.isEmpty()) {
            return null;
        }
        String[] values = data.split(",");
        ListNode dummy = new ListNode(0);
        ListNode current = dummy;
        for (String val : values) {
            current.next = new ListNode(Integer.parseInt(val.trim()));
            current = current.next;
        }
        return dummy.next;
    }


    public static String serialize(ListNode head) {
        StringBuilder sb = new StringBuilder();
        ListNode current = head;
        while (current != null) {
            sb.append(current.val).append(",");
            current = current.next;
        }
        return sb.length() > 0 ? sb.substring(0, sb.length() - 1) : "";
    }
}

public class Solution {
    public ListNode mergeNodes(ListNode head) {
        ListNode dummy = new ListNode(0);
        ListNode current = dummy;
        ListNode temp = head.next;
        
        int sum = 0;
        
        while (temp != null) {
            if (temp.val == 0) {
                current.next = new ListNode(sum);
                current = current.next;
                sum = 0;
            } else {
                sum += temp.val;
            }
            temp = temp.next;
        }
        
        return dummy.next;
    }

    public static void main(String[] args) {
        ListNode head = ListNode.deserialize("[0,3,1,0,4,5,2,0]");
        Solution sol = new Solution();
        ListNode result = sol.mergeNodes(head);
        System.out.println(ListNode.serialize(result)); // Output should be "4,11"
    }
}


